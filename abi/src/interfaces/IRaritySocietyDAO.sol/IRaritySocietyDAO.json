[
  "event NewAdmin(address oldAdmin, address newAdmin)",
  "event NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin)",
  "event NewVetoer(address oldVetoer, address newVetoer)",
  "event ProposalCanceled(uint256 id)",
  "event ProposalCreated(uint256 id, address proposer, address[] targets, uint256[] values, string[] signatures, bytes[] calldatas, uint256 startBlock, uint256 endBlock, uint256 quorumVotes, string description)",
  "event ProposalExecuted(uint256 id)",
  "event ProposalQueued(uint256 id, uint256 eta)",
  "event ProposalThresholdSet(uint256 oldProposalThreshold, uint256 newProposalThreshold)",
  "event ProposalVetoed(uint256 id)",
  "event QuorumVotesBPSSet(uint256 oldQuorumVotesBPS, uint256 newQuorumVotesBPS)",
  "event VoteCast(address indexed voter, uint256 proposalId, uint8 support, uint256 votes, string reason)",
  "event VotingDelaySet(uint256 oldVotingDelay, uint256 newVotingDelay)",
  "event VotingPeriodSet(uint256 oldVotingPeriod, uint256 newVotingPeriod)",
  "function acceptAdmin()",
  "function cancel(uint256 proposalId)",
  "function castVote(uint256 proposalId, uint8 support)",
  "function castVoteBySig(uint256 proposalId, uint8 support, uint8 v, bytes32 r, bytes32 s)",
  "function castVoteWithReason(uint256 proposalId, uint8 support, string reason)",
  "function execute(uint256 proposalId)",
  "function getActions(uint256 proposalId) view returns (address[] targets, uint256[] values, string[] signatures, bytes[] calldatas)",
  "function getReceipt(uint256 proposalId, address voter) view returns (tuple(bool hasVoted, uint8 support, uint32 votes) )",
  "function maxProposalThreshold() view returns (uint256)",
  "function propose(address[] targets, uint256[] values, string[] signatures, bytes[] calldatas, string description) returns (uint256)",
  "function queue(uint256 proposalId)",
  "function revokeVetoPower()",
  "function setPendingAdmin(address newPendingAdmin)",
  "function setProposalThreshold(uint256 newProposalThreshol)",
  "function setQuorumVotesBPS(uint256 newQuorumVotesBPS)",
  "function setVetoer(address newVetoer)",
  "function setVotingDelay(uint256 newVotingDelay)",
  "function setVotingPeriod(uint256 newVotingPeriod)",
  "function state(uint256 proposalId) view returns (uint8)",
  "function veto(uint256 proposalId)"
]
